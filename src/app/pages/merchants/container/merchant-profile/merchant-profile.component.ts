import {Component, OnInit} from '@angular/core';
import {HttpClient} from "@angular/common/http";
import {filter} from "rxjs";
import {ActivatedRoute} from "@angular/router";

@Component({
  selector: 'app-merchant-profile',
  templateUrl: './merchant-profile.component.html',
  styleUrls: ['./merchant-profile.component.scss']
})
export class MerchantProfileComponent implements OnInit{
  public imgUrl = '';
  private URL_BACKEND = 'https://mauriquotes-backend.herokuapp.com/';

  public merchantInfo: any = [];
  constructor(
    private _httpClient: HttpClient,
    private route: ActivatedRoute
              ) {
  }
  ngOnInit() {
    this.convertSVGToB64();

    // console.log('wdqdqw');
    //
    // this.route.params.subscribe(params => {
    //   console.log('qwdqwdwq', params['id']) //log the value of id
    // });
  }

  convertSVGToB64() {
    let svg  = `<svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
    <defs>
        <style type="text/css">
            @font-face {
                font-family: 'Roboto-Bold';
                src: url('data:font/woff;charset=utf-8;base64,') format('woff');
                font-weight: normal;
                font-style: normal;
            }
        </style>
    </defs>
    <g>
        <circle cx="100" cy="100" r="99" fill="#272932" stroke="#272932" stroke-width="1" />
        <text  x="45%" y="59" font-size="45" fill="white"
            style="text-anchor: middle; font-family: 'Roboto-Bold';">__NOTE__</text>
         <text x="68%" y="59" font-size="28" fill="white" style="text-anchor: middle; font-family: 'Roboto-Bold';">
            /5
        </text>
        <text x="50%" y="84" font-size="13" fill="white" style="text-anchor: middle; font-family: 'Roboto-Bold';">__COUNT__  client reviews</text>
        <svg viewBox="0 0 163 200" x="0" y="15.5" width="200" >
            <g>
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="31">
                    <rect x="0" y="0" width="100" height="100" fill="white" />

                </svg>
                <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="white" />
                </svg>
                <mask id="Mask1">
                        <rect x="0" y="0" width="100" height="100" fill="white" />
                    </mask>
                 <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#D6254F" mask="url(#Mask1)" />
                </svg>
            </g>
            <g transform="translate(33 0)">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="31">
                    <rect x="0" y="0" width="100" height="100" fill="white" />

                </svg>
                <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#FDD0C7" />
                </svg>
                <mask id="Mask2">
                        <rect x="0" y="0" width="100" height="100" fill="white" />
                    </mask>
                 <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#D6254F" mask="url(#Mask2)" />
                </svg>
            </g>
            <g transform="translate(66 0)">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="31">
                    <rect x="0" y="0" width="100" height="100" fill="white" />

                </svg>
                <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#FDD0C7" />
                </svg>

                <mask id="Mask3">
                        <rect x="0" y="0" width="100" height="100" fill="white" />
                    </mask>
                 <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#D6254F" mask="url(#Mask3)" />
                </svg>
            </g>
            <g transform="translate(99 0)">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="31">
                    <rect x="0" y="0" width="100" height="100" fill="white" />


                </svg>
                <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#FDD0C7" />
                </svg>
                <mask id="Mask4">
                        <rect x="0" y="0" width="50" height="100" fill="white" />
                    </mask>
                 <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#D6254F" mask="url(#Mask4)" />
                </svg>
            </g>
            <g transform="translate(132 0)">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="31">
                    <rect x="0" y="0" width="100" height="100" fill="white" />

                </svg>
                <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#FDD0C7" />
                </svg>

                <mask id="Mask5">
                        <rect x="0" y="0" width="0" height="100" fill="white" />
                    </mask>
                 <svg width="23" x="4" viewBox="0 0 101 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M53.6038 2.60183L62.6806 29.8371C63.1245 31.1679 64.3862 32.0551 65.823 32.0551H96.6982C99.899 32.0551 101.231 36.0476 98.6374 37.8804L73.6499 55.5547C72.4934 56.3719 72.0144 57.8311 72.4467 59.1503L81.9907 87.763C82.9837 90.7282 79.5025 93.1914 76.9091 91.3586L52.2253 73.8827C50.8936 72.9371 49.118 72.9371 47.7862 73.8827L23.0908 91.3703C20.5091 93.2031 17.0279 90.7399 18.0091 87.7747L27.5532 59.1619C27.9971 57.8311 27.5065 56.3835 26.35 55.5664L1.37416 37.8687C-1.20753 36.0359 0.11252 32.0434 3.31335 32.0434H34.1885C35.6137 32.0434 36.887 31.1445 37.331 29.8254L46.4078 2.59015C47.5526 -0.865327 52.4473 -0.865327 53.6038 2.60183Z"
                        fill="#D6254F" mask="url(#Mask5)" />
                </svg>
            </g>
        </svg>
                   <text  x="35%" y="165" font-size="15" fill="white"
            style="text-anchor: middle; font-family: 'Roboto-Bold';">MCB</text>
         <text x="60%" y="165" font-size="15" fill="white" style="text-anchor: middle; font-family: 'Roboto-Bold';">
            Reviews
        </text>
    </g>
</svg>`;
    const merchantId = 6;
    this._httpClient.get(`${this.URL_BACKEND}api/merchants/${merchantId}`)
      .pipe(filter(response => !!response))
      .subscribe((merchantInfo: any) => {
      this.merchantInfo = merchantInfo.data;
      const rating:any = parseFloat(merchantInfo.data.ratings).toFixed(1);
      const count = merchantInfo.data.reviews.length;
      svg = svg.replace('__NOTE__', rating);
      svg = svg.replace('__COUNT__', count)
      this.imgUrl = 'data:image/svg+xml;base64,'+btoa(svg);
    })
  }
}
